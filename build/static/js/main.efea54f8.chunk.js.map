{"version":3,"sources":["components/Note.js","App.js","index.js"],"names":["Note","note","content","App","props","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","notesToShow","filter","important","onClick","map","i","key","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","id","length","concat","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"kLAQeA,EANF,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACd,OACE,4BAAKA,EAAKC,UCkDCC,EAnDH,SAACC,GAAW,IAAD,EACKC,mBAASD,EAAME,OADpB,mBACdA,EADc,KACPC,EADO,OAESF,mBAAS,IAFlB,mBAEdG,EAFc,KAELC,EAFK,OAGSJ,oBAAS,GAHlB,mBAGdK,EAHc,KAGLC,EAHK,KAuBfC,EAAcF,EAChBJ,EACAA,EAAMO,QAAO,SAAAZ,GAAI,OAAIA,EAAKa,aAE9B,OACE,6BACE,qCACA,6BACE,4BAAQC,QAAS,kBAAMJ,GAAYD,KAAnC,QACQA,EAAU,YAAc,QAGlC,4BACGE,EAAYI,KAAI,SAACf,EAAMgB,GAAP,OACf,kBAAC,EAAD,CAAMC,IAAKD,EAAGhB,KAAMA,QAGxB,0BAAMkB,SAnCM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBpB,QAASM,EACTe,MAAM,IAAIC,MAAOC,cACjBX,UAAWY,KAAKC,SAAW,GAC3BC,GAAItB,EAAMuB,OAAS,GAGrBtB,EAASD,EAAMwB,OAAOR,IACtBb,EAAW,MA0BP,2BACEsB,MAAOvB,EACPwB,SAzBiB,SAACZ,GACxBa,QAAQC,IAAId,EAAMe,OAAOJ,OACzBtB,EAAWW,EAAMe,OAAOJ,UAyBpB,4BAAQK,KAAK,UAAb,WCvBRC,IAASC,OACP,kBAAC,EAAD,CAAKhC,MAtBO,CACZ,CACEsB,GAAI,EACJ1B,QAAS,eACTqB,KAAM,2BACNT,WAAW,GAEb,CACEc,GAAI,EACJ1B,QAAS,sCACTqB,KAAM,2BACNT,WAAW,GAEb,CACEc,GAAI,EACJ1B,QAAS,+DACTqB,KAAM,2BACNT,WAAW,MAMbyB,SAASC,eAAe,W","file":"static/js/main.efea54f8.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note }) => {\n  return (\n    <li>{note.content}</li>\n  )\n}\n\nexport default Note","import React, { useState } from 'react'\nimport Note from './components/Note'\n\nconst App = (props) => {\n  const [notes, setNotes] = useState(props.notes)\n  const [newNote, setNewNote] = useState('') \n  const [showAll, setShowAll] = useState(true)\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1,\n    }\n  \n    setNotes(notes.concat(noteObject))\n    setNewNote('')\n  }\n\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all' }\n        </button>\n      </div>      \n      <ul>\n        {notesToShow.map((note, i) => \n          <Note key={i} note={note} />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>   \n    </div>\n  )\n}\n\nexport default App ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nconst notes = [\n  {\n    id: 1,\n    content: 'HTML is easy',\n    date: '2020-01-10T17:30:31.098Z',\n    important: true\n  },\n  {\n    id: 2,\n    content: 'Browser can execute only Javascript',\n    date: '2020-01-10T18:39:34.091Z',\n    important: false\n  },\n  {\n    id: 3,\n    content: 'GET and POST are the most important methods of HTTP protocol',\n    date: '2020-01-10T19:20:14.298Z',\n    important: true\n  }\n]\n\nReactDOM.render(\n  <App notes={notes} />,\n  document.getElementById('root')\n)"],"sourceRoot":""}